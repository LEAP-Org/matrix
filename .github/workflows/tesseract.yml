# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Tesseract Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        apt install shellcheck
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names in tcs modules
        flake8 tcs --count --select=E9,F63,F7,F82 --show-source --statistics --builtins='self'
    - name: Lint with shellcheck
    run: |
      # run against all bash scripts in /bin
      shellcheck bin/*
        
  
  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install codecov
        python -m pip install coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Coverage Report	
      run: |
        coverage run -m unittest discover -v && coverage report
        # upload codecov token
        codecov --token=a1ffb52f-3e83-46c1-a806-9d8298f76412
        
  # integration:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python 3.8
  #     uses: actions/setup-python@v1
  #     with:
  #       python-version: 3.8
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #   - name: Integration Tests
  #     run: |
  #       chmod +x ./setup.sh
  #       ./setup.sh
  #       #./run-tcs.sh
  
  
