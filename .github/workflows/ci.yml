name: ci 

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        sudo apt install shellcheck
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install cpplint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names in tcs modules
        flake8 tcs --count --select=E9,F63,F7,F82 --show-source --statistics --builtins='self'
    - name: shellcheck
      run: |
        shellcheck bin/* -x
        shellcheck firmware/scripts/* -x
    - name: cpplint
      run: |
        # run against all firmware h, cpp and ino files
        cpplint --recursive --extensions=ino,h,cpp firmware/src firmware/include
    
  unittest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Unittest Suite Execution
      run: |
        python3 -m unittest discover -s tcs/tests
  
  coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install codecov
        python -m pip install coverage
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Coverage Report	
      run: |
        coverage run -m unittest discover -v && coverage report
        # upload codecov token
        codecov --token=a1ffb52f-3e83-46c1-a806-9d8298f76412
